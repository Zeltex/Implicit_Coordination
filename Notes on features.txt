Product update, should we consider reachability of depth >1? seems a->b->c shouldn't result in a->c

Perspective shift, should there be an indistinguishability relation between all worlds for the given agent?

Split into globals, how should it work exactly? Currently created a new state for each designated world, where said designated world is the only one which is designated, and removed all, but the reflexive indistinguishability for the agent

Missing bisimilar check, currently it is possible for two bisimilar states to have two policy entries with two different actions, however it should not be practically possible since actions are always iterated in the same order.

How to handle if pepper attempts an action which is not applicable?

Non-deterministic actions, perceive



Answers:
- Product update, all reachable worlds from all designated worlds. Should not include a designated world if it does not have an incoming edge for the agent

- If s is local for i (closed under indistinguishisability) then nothing changes

- Relations should be preserved after taking globals(s)



TODO:
- DEL_Interface.get_next_action() should take an agent name as parameter
- Observability: Will implement as attributes on state and apply dynamically to actions
- Add method to execute actions defined in domain via DEL_Interface
- Custom parser and lexer
- Add check in loader buffer so that everyone perceives themselves
- Check exactly what edges are supposed to be on the action for perceiver, observer and unaware
- Is_bisimilar_on_path currently only checks against OR nodes, not sure if this is correct or not, think about it
- Checking if action is applicable in planner may be redundant, as actions are now supposed to contain an event in which it succeeds and one in which it fails
- Seems that perspective shifts are only supposed to change what worlds are designated, not what worlds exists or relations between them
- bug in ensuring parser sets reflexive perceivability on agents
- Create two events in announce actions so that observer knows about the announce, but not the result


NOTES:
- Announce actions do not create reachability relations by default since they are handled based on perceivability/observability in product update