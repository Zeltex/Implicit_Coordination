_domain Pepper {
	_announce_enabled = true
	_types = [container, object, agent]
	_propositions = [
		in(container c, object o)
		perceives(agent a, agent b)
		reachable(agent a, container c)
	]

	_action perceive (container c, object o) {
	_cost = 100
		_owner = agent agent
		_designated_events = [event0, event1]
		_event event0 { 
			_preconditions = ( AND(reachable(agent, c), in(c, o)) )
			_effect_add = []
			_effect_delete = []
		}
		_event event1 { 
			_preconditions = ( AND(reachable(agent, c), NOT(in(c, o))) )
			_effect_add = [ ]
			_effect_delete = [ ]
		}
		_reachability = {
			agent = {
				(event0 event0) = (TOP)
				(event1 event1) = (TOP)
			}
			_rest = {
				(event0 event0) = (TOP)
				(event1 event1) = (TOP)
				(event0 event1) = (TOP)
				(event1 event0) = (TOP)
			}
		}
	}
}
_problem False_Belief_Synthesis {
	_objects = {
		container = [b1, b2, b3, b4]
		object = [cr, ch]
		agent = [R, H]
	}
	_initial_state = [
	]
	_world w0 [in(b1, cr), in(b2, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w1 [in(b1, cr), in(b3, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w2 [in(b1, cr), in(b4, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w3 [in(b2, cr), in(b1, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w4 [in(b2, cr), in(b3, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w5 [in(b2, cr), in(b4, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w6 [in(b3, cr), in(b1, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w7 [in(b3, cr), in(b2, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w8 [in(b3, cr), in(b4, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w9 [in(b4, cr), in(b1, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w10 [in(b4, cr), in(b2, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_world w11 [in(b4, cr), in(b3, ch), perceives(R, H), perceives(H, R), reachable(R, b1), reachable(R, b2), reachable(H, b3), reachable(H, b4)]
	_goal = [ AND(
				
				OR(	BELIEVES(H, in(b1, ch)),
					BELIEVES(H, in(b2, ch)),
					BELIEVES(H, in(b3, ch)),
					BELIEVES(H, in(b4, ch)))) ]

	_designated_worlds = [ w7 ]
	_reflexivity = false
	_reachability = {
		R = {
		 (w0, w0) (w1, w0) (w2, w0) (w3, w0) (w4, w0) (w5, w0) (w6, w0) (w7, w0) (w8, w0) (w9, w0) (w10, w0) (w11, w0) 
		 (w0, w1) (w1, w1) (w2, w1) (w3, w1) (w4, w1) (w5, w1) (w6, w1) (w7, w1) (w8, w1) (w9, w1) (w10, w1) (w11, w1) 
		 (w0, w2) (w1, w2) (w2, w2) (w3, w2) (w4, w2) (w5, w2) (w6, w2) (w7, w2) (w8, w2) (w9, w2) (w10, w2) (w11, w2) 
		 (w0, w3) (w1, w3) (w2, w3) (w3, w3) (w4, w3) (w5, w3) (w6, w3) (w7, w3) (w8, w3) (w9, w3) (w10, w3) (w11, w3) 
		 (w0, w4) (w1, w4) (w2, w4) (w3, w4) (w4, w4) (w5, w4) (w6, w4) (w7, w4) (w8, w4) (w9, w4) (w10, w4) (w11, w4) 
		 (w0, w5) (w1, w5) (w2, w5) (w3, w5) (w4, w5) (w5, w5) (w6, w5) (w7, w5) (w8, w5) (w9, w5) (w10, w5) (w11, w5) 
		 (w0, w6) (w1, w6) (w2, w6) (w3, w6) (w4, w6) (w5, w6) (w6, w6) (w7, w6) (w8, w6) (w9, w6) (w10, w6) (w11, w6) 
		 (w0, w7) (w1, w7) (w2, w7) (w3, w7) (w4, w7) (w5, w7) (w6, w7) (w7, w7) (w8, w7) (w9, w7) (w10, w7) (w11, w7) 
		 (w0, w8) (w1, w8) (w2, w8) (w3, w8) (w4, w8) (w5, w8) (w6, w8) (w7, w8) (w8, w8) (w9, w8) (w10, w8) (w11, w8) 
		 (w0, w9) (w1, w9) (w2, w9) (w3, w9) (w4, w9) (w5, w9) (w6, w9) (w7, w9) (w8, w9) (w9, w9) (w10, w9) (w11, w9) 
		 (w0, w10) (w1, w10) (w2, w10) (w3, w10) (w4, w10) (w5, w10) (w6, w10) (w7, w10) (w8, w10) (w9, w10) (w10, w10) (w11, w10) 
		 (w0, w11) (w1, w11) (w2, w11) (w3, w11) (w4, w11) (w5, w11) (w6, w11) (w7, w11) (w8, w11) (w9, w11) (w10, w11) (w11, w11)
		 }
		H = {
		 (w0, w0) (w1, w0) (w2, w0) (w3, w0) (w4, w0) (w5, w0) (w6, w0) (w7, w0) (w8, w0) (w9, w0) (w10, w0) (w11, w0) 
		 (w0, w1) (w1, w1) (w2, w1) (w3, w1) (w4, w1) (w5, w1) (w6, w1) (w7, w1) (w8, w1) (w9, w1) (w10, w1) (w11, w1) 
		 (w0, w2) (w1, w2) (w2, w2) (w3, w2) (w4, w2) (w5, w2) (w6, w2) (w7, w2) (w8, w2) (w9, w2) (w10, w2) (w11, w2) 
		 (w0, w3) (w1, w3) (w2, w3) (w3, w3) (w4, w3) (w5, w3) (w6, w3) (w7, w3) (w8, w3) (w9, w3) (w10, w3) (w11, w3) 
		 (w0, w4) (w1, w4) (w2, w4) (w3, w4) (w4, w4) (w5, w4) (w6, w4) (w7, w4) (w8, w4) (w9, w4) (w10, w4) (w11, w4) 
		 (w0, w5) (w1, w5) (w2, w5) (w3, w5) (w4, w5) (w5, w5) (w6, w5) (w7, w5) (w8, w5) (w9, w5) (w10, w5) (w11, w5) 
		 (w0, w6) (w1, w6) (w2, w6) (w3, w6) (w4, w6) (w5, w6) (w6, w6) (w7, w6) (w8, w6) (w9, w6) (w10, w6) (w11, w6) 
		 (w0, w7) (w1, w7) (w2, w7) (w3, w7) (w4, w7) (w5, w7) (w6, w7) (w7, w7) (w8, w7) (w9, w7) (w10, w7) (w11, w7) 
		 (w0, w8) (w1, w8) (w2, w8) (w3, w8) (w4, w8) (w5, w8) (w6, w8) (w7, w8) (w8, w8) (w9, w8) (w10, w8) (w11, w8) 
		 (w0, w9) (w1, w9) (w2, w9) (w3, w9) (w4, w9) (w5, w9) (w6, w9) (w7, w9) (w8, w9) (w9, w9) (w10, w9) (w11, w9) 
		 (w0, w10) (w1, w10) (w2, w10) (w3, w10) (w4, w10) (w5, w10) (w6, w10) (w7, w10) (w8, w10) (w9, w10) (w10, w10) (w11, w10) 
		 (w0, w11) (w1, w11) (w2, w11) (w3, w11) (w4, w11) (w5, w11) (w6, w11) (w7, w11) (w8, w11) (w9, w11) (w10, w11) (w11, w11)
		 }
	}
}


