

_domain Pepper {
	_announce_enabled = false
	_types = [agent, pos]
	_propositions = [
		at(agent a, pos p)
		adj(pos p1, pos p2)
		goal(agent a, pos p)
		free(pos p)
		stopped(agent a)
	]

	_action move (pos from, pos to, agent agent) {
		_cost = 100
		_owner = agent agent
		_designated_events = [event0]
		_event event0 { 
			_preconditions = ( AND( at(agent, from), free(to), adj(from, to), NOT(stopped(agent))) )
			_effect_add = [ at(agent, to), free(from) ]
			_effect_delete = [ at(agent, from), free(to) ]
		}
		_reachability = {
			agent = {
				(event0)
			}
			_rest = {
				(event0)
			}
		}
	}

	_action announce (pos p, agent agent) {
		_cost = 100
		_owner = agent agent
		_designated_events = [event0]
		_event event0 { 
			_preconditions = ( AND(at(agent, p), goal(agent, p), NOT(stopped(agent)) ))
			_effect_add = [ stopped(agent) ]
			_effect_delete = [ ]
		}
		_reachability = {
			agent = {
				(event0)
			}
			_rest = {
				(event0)
			}
		}
	}
}
_problem MAPF_DU {
_objects = {
	agent = [a0, a1, a2, a3]
	pos = [c0, c1, c2, c3, c4, x1, x2, x3]
}
_initial_state = [
	adj(c0, c1), adj(c1, c0), adj(c1, c2), adj(c2, c1), adj(c2, c3), adj(c3, c2), adj(c3, c4), adj(c4, c3), adj(c1, x1), adj(x1, c1), adj(c2, x2), adj(x2, c2), adj(c3, x3), adj(x3, c3)
]


	_world w0 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, c0), goal(a1, c1), goal(a2, c2), goal(a3, c3)]
	_world w1 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, x1), goal(a1, c1), goal(a2, c2), goal(a3, c3)]
	_world w2 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, c0), goal(a1, x2), goal(a2, c2), goal(a3, c3)]
	_world w3 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, x1), goal(a1, x2), goal(a2, c2), goal(a3, c3)]
	_world w4 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, c0), goal(a1, c1), goal(a2, x3), goal(a3, c3)]
	_world w5 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, x1), goal(a1, c1), goal(a2, x3), goal(a3, c3)]
	_world w6 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, c0), goal(a1, x2), goal(a2, x3), goal(a3, c3)]
	_world w7 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, x1), goal(a1, x2), goal(a2, x3), goal(a3, c3)]
	_world w8 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, c0), goal(a1, c1), goal(a2, c2), goal(a3, c4)]
	_world w9 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, x1), goal(a1, c1), goal(a2, c2), goal(a3, c4)]
	_world w10 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, c0), goal(a1, x2), goal(a2, c2), goal(a3, c4)]
	_world w11 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, x1), goal(a1, x2), goal(a2, c2), goal(a3, c4)]
	_world w12 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, c0), goal(a1, c1), goal(a2, x3), goal(a3, c4)]
	_world w13 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, x1), goal(a1, c1), goal(a2, x3), goal(a3, c4)]
	_world w14 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, c0), goal(a1, x2), goal(a2, x3), goal(a3, c4)]
	_world w15 [free(c0), at(a3, c1), at(a2, c2), at(a1, c3), at(a0, c4), free(x1), free(x2), free(x3), goal(a0, x1), goal(a1, x2), goal(a2, x3), goal(a3, c4)]
		_goal = [ AND(stopped(a0), stopped(a1), stopped(a2), stopped(a3))]
	
	_designated_worlds = [ w0 ]
	_reflexivity = false
	_reachability = {
		a0 = {
			(w0 w2 w4 w6 w8 w10 w12 w14) (w1 w3 w5 w7 w9 w11 w13 w15)
		}
		a1 = {
			(w0 w1 w4 w5 w8 w9 w12 w13) (w2 w3 w6 w7 w10 w11 w14 w15)
		}
		a2 = {
			(w0 w1 w2 w3 w8 w9 w10 w11) (w4 w5 w6 w7 w12 w13 w14 w15)
		}
		a3 = {
			(w0 w1 w2 w3 w4 w5 w6 w7) (w8 w9 w10 w11 w12 w13 w14 w15)
		}
	}
}