_domain Pepper {
	_types = [container, object]
	_propositions = [
		in(container c, object o)
	]
	_action announce (proposition prop) {
		_owner = name
		_designated_events = [event1]
		_event event1 { 
			_preconditions = (prop)
			_effect_add = []
			_effect_delete = []

		}
	}
}
_problem simple_problem {
	_objects = {
		container = [box0, box1, box2, L]
		object = [red_cube]
		agent = [Pepper, L]
	}
	_initial_state = [
		in(box1, red_cube)
	]
	_world world0 [in(box0, red_cube)]
	_world world1 [in(box1, red_cube)]
	_world world2 [in(box2, red_cube)]
	_goal = []
	_designated_worlds = [world0, world1, world2]
	_reflexivity = true
	_reachability = {
		Pepper = {
			(world0, world1)
		}
	}
}


