

_domain Pepper {
	_types = [agent, pos]
	_propositions = [
		at(agent a, pos p)
		adj(pos p1, pos p2)
		goal(agent a, pos p)
		free(pos p)
		stopped(agent a)
	]

	_action move (pos from, pos to, agent agent) {
		_cost = 100
		_owner = agent agent
		_event event0 { 
			_preconditions = ( AND( AND( AND( at(agent, from), free(to)), adj(from, to)), NOT(stopped(agent)) ) )
			_effect_add = [ at(agent, to), free(from) ]
			_effect_delete = [ at(agent, from), free(to) ]
		}
		_designated_events = [event0]
		_reachability = {
			agent = {
				(event0 event0) = (TOP)
			}
			_rest = {
				(event0 event0) = (TOP)
			}
		}
	}

	_action announce (pos p, agent agent) {
		_cost = 100
		_owner = agent agent
		_event event0 { 
			_preconditions = ( AND( AND(at(agent, p), goal(agent, p)), NOT(stopped(agent)) ))
			_effect_add = [ stopped(agent) ]
			_effect_delete = [ ]
		}
		_designated_events = [event0]
		_reachability = {
			agent = {
				(event0 event0) = (TOP)
			}
			_rest = {
				(event0 event0) = (TOP)
			}
		}
	}
}
_problem MAPF_DU {
_objects = {
	agent = [a0, a1]
	pos = [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, x6]
}
_initial_state = [
	adj(c0, c1), adj(c1, c0), adj(c1, c2), adj(c2, c1), adj(c2, c3), adj(c3, c2), adj(c3, c4), adj(c4, c3), adj(c4, c5), adj(c5, c4), adj(c5, c6), adj(c6, c5), adj(c6, c7), adj(c7, c6), adj(c7, c8), adj(c8, c7), adj(c8, c9), adj(c9, c8), adj(c9, c10), adj(c10, c9), adj(c10, c11), adj(c11, c10), adj(c11, c12), adj(c12, c11), adj(c6, x6), adj(x6, c6)
]


	_world w0 [free(c0), free(c1), free(c2), free(c3), free(c4), free(c5), at(a1, c6), free(c7), free(c8), free(c9), free(c10), free(c11), at(a0, c12), free(x6), goal(a0, c0), goal(a1, c6)]
	_world w1 [free(c0), free(c1), free(c2), free(c3), free(c4), free(c5), at(a1, c6), free(c7), free(c8), free(c9), free(c10), free(c11), at(a0, c12), free(x6), goal(a0, x6), goal(a1, c6)]
	_world w2 [free(c0), free(c1), free(c2), free(c3), free(c4), free(c5), at(a1, c6), free(c7), free(c8), free(c9), free(c10), free(c11), at(a0, c12), free(x6), goal(a0, c0), goal(a1, c12)]
	_world w3 [free(c0), free(c1), free(c2), free(c3), free(c4), free(c5), at(a1, c6), free(c7), free(c8), free(c9), free(c10), free(c11), at(a0, c12), free(x6), goal(a0, x6), goal(a1, c12)]
		_goal = [AND( stopped(a0), stopped(a1))]
	
	_designated_worlds = [ w0 ]
	_reachability = {
			a0 = {
			(w0, w0), (w0, w2), 
			(w1, w1), (w1, w3), 
			(w2, w0), (w2, w2), 
			(w3, w1), (w3, w3), 
			}
			a1 = {
			(w0, w0), (w0, w1), 
			(w1, w0), (w1, w1), 
			(w2, w2), (w2, w3), 
			(w3, w2), (w3, w3), 
			}
	}
}