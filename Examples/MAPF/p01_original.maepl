_domain Pepper {
	_announce_enabled = false
	_types = [agent, pos]
	_propositions = [
		at(agent a, pos p)
		adj(pos p1, pos p2)
		goal(agent a, pos p)
		free(pos p)
	]

	_action move (pos from, pos to) {
		_cost = 100
		_owner = agent agent
		_designated_events = [event0]
		_event event0 { 
			_preconditions = ( AND( at(agent, from), free(to), adj(from, to)) )
			_effect_add = [ at(agent, to), free(from) ]
			_effect_delete = [ at(agent, from), free(to) ]
		}
		_reachability = {
			agent = {
				(event0 event0) = (TOP)
			}
			_rest = {
				(event0 event0) = (TOP)
			}
		}
	}

	_action announce (pos p) {
		_cost = 100
		_owner = agent agent
		_designated_events = [event0]
		_event event0 { 
			_preconditions = ( AND(at(agent, p), goal(agent, p)) )
			_effect_add = [  ]
			_effect_delete = [ ]
		}
		_reachability = {
			agent = {
				(event0 event0) = (TOP)
			}
			_rest = {
				(event0 event0) = (TOP)
			}
		}
	}
}
_problem Block_Search {
	_objects = {
		agent = [a0, a1]
		pos = [c00, c01, c02, x01]
	}
	_initial_state = [
	]
	_world w0 [ adj(c00, c01), adj(c01, c00), adj(c01, c02), adj(c02, c01), adj(c01, x01), adj(x01, c01), at(a0, c02), at(a1, c01), goal(a0, c00), goal(a1, c01), free(c00), free(x01)]
	_world w1 [ adj(c00, c01), adj(c01, c00), adj(c01, c02), adj(c02, c01), adj(c01, x01), adj(x01, c01), at(a0, c02), at(a1, c01), goal(a0, x01), goal(a1, c01), free(c00), free(x01)]
	_world w2 [ adj(c00, c01), adj(c01, c00), adj(c01, c02), adj(c02, c01), adj(c01, x01), adj(x01, c01), at(a0, c02), at(a1, c01), goal(a0, c00), goal(a1, c02), free(c00), free(x01)]
	_world w3 [ adj(c00, c01), adj(c01, c00), adj(c01, c02), adj(c02, c01), adj(c01, x01), adj(x01, c01), at(a0, c02), at(a1, c01), goal(a0, x01), goal(a1, c02), free(c00), free(x01)]

	_goal = [ OR( 
				AND ( goal(a0, c00), at(a0, c00), goal(a1, c01), at(a1, c01) ) 
				AND ( goal(a0, x01), at(a0, x01), goal(a1, c01), at(a1, c01) ) 
				AND ( goal(a0, c00), at(a0, c00), goal(a1, c02), at(a1, c02) ) 
				AND ( goal(a0, x01), at(a0, x01), goal(a1, c02), at(a1, c02) ) )] 

	_designated_worlds = [ w0 ]
	_reflexivity = false
	_reachability = {
		a0 = {
		 (w0, w0), (w0, w2),
		 (w1, w1), (w1, w3),
		 (w2, w0), (w2, w2),
		 (w3, w1), (w3, w3), 
		 }
		a1 = {
		 (w0, w0), (w0, w1),
		 (w1, w0), (w1, w1),
		 (w2, w2), (w2, w3),
		 (w3, w2), (w3, w3), 
		 }
	}
}


